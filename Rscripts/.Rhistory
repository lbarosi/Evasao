pos[i] <- i
}
}
}
ingressos <- numeric()
evasões   <- numeric()
coding    <- numeric()
codevad   <- numeric()
mediaI    <- numeric()
pos <- pos[!is.na(pos)]
for (i in c(1:length(pos))) {
if (i == 1){
ingressos[i] <- durDF$PERIODO_INGRESSO[[i]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[i]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[i]]
} else {
ingressos[i] <- durDF$PERIODO_INGRESSO[[pos[i-1]+1]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[pos[i-1]+1]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[pos[i-1]+1]]
}
}
matrizV <- as.data.frame(cbind(ingressos, evasões, coding, codevad, mediaI))
matrizV$NATURALIDADE <- durDF$NATURALIDADE[[1]]
matrizV$SEXO <- durDF$SEXO[[1]]
matrizV$CURSO <- curso
return(matrizV)
}
AlunosV     <- vinculos$CURSO %>% lapply(., function(x) duracaoV(x)) %>% do.call(rbind,.) %>% as.data.frame()
AlunosV$CPF <- CPF
return(AlunosV)
}
#'Arranja vínculos de lista de alunos
DadosAlunos <- function(df){
getdataAluno <- df %>% lapply(., function(x) DadosAluno(x))
getdataAluno <- do.call(rbind, getdataAluno) %>% as.data.frame()
return(getdataAluno)
}
AlunosC     <- DadosAlunos(AlunosUnicos$CPF)
DadosAluno <- function(cpf){
Aluno       <- Alunos %>% filter(., CPF == cpf)
vinculos    <- Aluno  %>% select(., CURSO) %>% unique
#'Calcula a Duração dos Vínculos do aluno em cada curso
duracaoV    <- function(curso){
#' Subset dataframe apenas com vinculos do aluno para curso especificado
durDF           <- Aluno  %>% filter(., CURSO %in% curso) %>%
select(., PERIODO_INGRESSO, PERIODO_EVASAO,
COD_INGRESSO, COD_EVASAO, MEDIA_INGRESSO,
NATURALIDADE, SEXO)
#' Determina intervalo entre os diferentes vínculos
durDF$IngCirc   <- durDF$PERIODO_INGRESSO %>%
shifter() %>%
subtract(., durDF$PERIODO_EVASAO)
#' Se intervalo é > 4 é outro vínculo
#' Se intervalo é negativo achou o último vínculo
pos <- numeric()
if (length(durDF$PERIODO_INGRESSO) == 1) {
pos[1] <- 1
} else {
for (i in length(durDF$IngCirc)) {
if (durDF$IngCirc[[i]] > 4 || durDF$IngCirc[[i]] <= 0){
pos[i] <- i
}
}
}
ingressos <- numeric()
evasões   <- numeric()
coding    <- numeric()
codevad   <- numeric()
mediaI    <- numeric()
pos <- pos[!is.na(pos)]
for (i in c(1:length(pos))) {
if (i == 1){
ingressos[i] <- durDF$PERIODO_INGRESSO[[i]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[i]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[i]]
} else {
ingressos[i] <- durDF$PERIODO_INGRESSO[[pos[i-1]+1]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[pos[i-1]+1]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[pos[i-1]+1]]
}
}
matrizV <- as.data.frame(cbind(ingressos, evasões, coding, codevad, mediaI))
matrizV$NATURALIDADE <- durDF$NATURALIDADE[[1]]
matrizV$SEXO <- durDF$SEXO[[1]]
matrizV$CURSO <- curso
return(matrizV)
}
AlunosV     <- vinculos$CURSO %>% lapply(., function(x) duracaoV(x)) %>% do.call(rbind,.) %>% as.data.frame()
AlunosV$CPF <- CPF
return(AlunosV)
}
#'Arranja vínculos de lista de alunos
DadosAlunos <- function(df){
getdataAluno <- df %>% lapply(., function(x) DadosAluno(x))
getdataAluno <- do.call(rbind, getdataAluno) %>% as.data.frame()
return(getdataAluno)
}
AlunosC     <- DadosAlunos(AlunosUnicos$CPF)
View(AlunosC)
AlunosC     %<>% filter(., PERIODO_INGRESSO >= PERIODO & COD_EVASAO %in% Evasoes &
COD_INGRESSO %in% INGRESSO)
AlunosC     %<>% filter(., ingressos >= PERIODO & evasões %in% Evasoes &
coding %in% INGRESSO)
View(AlunosC)
time()
Sys.time()
inicio <- Sys.time()
fim <- Sys.time()
fim-inicio
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
setwd("~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts")
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
View(AlunosUnicos)
View(AlunosC)
AlunosCorreto  <- AlunosC %>% filter(., ingressos >= PERIODO )
View(AlunosCorreto)
AlunosCorreto  <- AlunosC %>% filter(., ingressos >= PERIODO & coding %in% INGRESSO )
AlunosCorreto  <- AlunosC %>% filter(., ingressos >= PERIODO & coding %in% INGRESSO & codevad %in% Evasoes )
Evasoes           <- append(Ev.desistencia,
append(Ev.academica,
append(Ev.concluintes, Ev.regulares)))
AlunosCorreto  <- AlunosC %>% filter(., ingressos >= PERIODO & coding %in% INGRESSO & codevad %in% Evasoes )
AlunosCorreto$status <- ifelse( codevad %in% Ev.academica, "evasão",
ifelse( codevad %in% Ev.concluinte, "graduado",
ifelse (codevad %in% Ev.desistencia, "desistência","UNDEF")))
AlunosCorreto$status <- ifelse( codevad %in% Ev.academica, "evasão",
ifelse( codevad %in% Ev.concluintes, "graduado",
ifelse (codevad %in% Ev.desistencia, "desistência","UNDEF")))
AlunosCorreto$status <- ifelse( AlunosCorreto$codevad %in% Ev.academica,
"evasão",
ifelse( AlunosCorreto$codevad %in% Ev.concluintes,
"graduado",
ifelse (AlunosCorreto$codevad %in% Ev.desistencia,
"desistência",
"UNDEF")))
AlunosCorreto$status <- ifelse( AlunosCorreto$codevad %in% Ev.academica,
"evasão",
ifelse( AlunosCorreto$codevad %in% Ev.concluintes,
"graduado",
ifelse (AlunosCorreto$codevad %in% Ev.desistencia,
"desistência",
"ativos")))
AlunosCorreto$duracao <- diffPeriodo(AlunosCorreto$evasões, AlunosCorreto$ingressos)
View(Aluno)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
setwd("~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts")
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
DadosAluno(AlunosUnicos[[100]])
cpf <- AlunosUnicos$CPF[[100]]
install.packages("mpfr")
install.packages("Rmpfr")
Alunos$CPF        %<>% mpfr(. ,base = 16)
suppressMessages(library("Rmpfr"))
Alunos$CPF        %<>% mpfr(. ,base = 16)
Alunos <- read.csv("../../DADOS-PESSOAIS/DADOS/Alunos/Alunos.csv", sep = ",")
Alunos$CPF <- sapply(Alunos$CPF, digest, algo = "md5", ascii = TRUE, raw = FALSE)
Alunos            <- read.csv("../DADOS/Alunos/Alunos.csv")
Alunos$CPF        %<>% mpfr(. ,base = 16)
Alunos$CPF        %<>% mpfr(. ,precbits = 2,base = 16)
Alunos$CPF        %<>% mpfr(. ,precBits = 2,base = 16)
Alunos$CPF        %<>% mpfr(. , precBits = 2, base = 16)
Alunos <- read.csv("../../DADOS-PESSOAIS/DADOS/Alunos/Alunos.csv", sep = ",")
Alunos$COD_INGRESSO %<>% as.numeric()
Alunos$COD_EVASAO %<>% as.numeric()
Alunos$CPF <- sapply(Alunos$CPF, digest, algo = "md5", serialize = TRUE, ascii = TRUE, raw = FALSE)
Alunos$MATRÍCULA <- sapply(Alunos$MATRÍCULA, digest, algo = "md5", serialize = TRUE, ascii = TRUE, raw = FALSE)
#!/usr/bin/Rscript
options(java.parameters = "-Xmx6096m")
library(readxl)
library(digest)
library(xlsx)
library(magrittr)
###########
#Hash de Tabelas
#Alunos
Alunos <- read.csv("../../DADOS-PESSOAIS/DADOS/Alunos/Alunos.csv", sep = ",")
Alunos$COD_INGRESSO %<>% as.numeric()
Alunos$COD_EVASAO %<>% as.numeric()
#------------------
Alunos$CPF <- sapply(Alunos$CPF, digest, algo = "md5", serialize = TRUE, ascii = TRUE, raw = FALSE)
Alunos$MATRÍCULA <- sapply(Alunos$MATRÍCULA, digest, algo = "md5", serialize = TRUE, ascii = TRUE, raw = FALSE)
write.csv(as.data.frame(Alunos), "../DADOS/Alunos/Alunos.csv", row.names = FALSE)
Alunos            <- read.csv("../DADOS/Alunos/Alunos.csv")
Alunos$CPF        %<>% mpfr(. , precBits = 2, base = 16)
Alunos$CPF        %<>% mpfr(. , base = 16)
Alunos$CPF        %<>% mpfr(. , base = 64)
View(Alunos)
Alunos$CPF %<>% as.character()
Alunos$CPF        %<>% mpfr(. , base = 64)
Alunos$CPF        %<>% mpfr(. , base = 16)
Alunos$MATRÍCULA  %<>% as.character()
Alunos$MATRÍCULA  %<>% mpfr(. , base = 16)
AlunosUnicos      <- Alunos %>% filter(., PERIODO_INGRESSO >= PERIODO, COD_EVASAO %in% Evasoes &
COD_INGRESSO %in% INGRESSO) %>%
select(., CPF)  %>%
unique
View(Alunos)
Alunos            <- read.csv("../DADOS/Alunos/Alunos.csv")
Alunos$CPF        %<>% as.character()
Alunos$MATRÍCULA  %<>% as.character()
#Alunos$CPF        %<>% mpfr(. , base = 16)
#Alunos$MATRÍCULA  %<>% mpfr(. , base = 16)
AlunosUnicos      <- Alunos %>% filter(., PERIODO_INGRESSO >= PERIODO, COD_EVASAO %in% Evasoes &
COD_INGRESSO %in% INGRESSO) %>%
select(., CPF)  %>%
unique
Alunos$CPF        %<>% as.character(as.character())
Alunos$MATRÍCULA  %<>% as.character(as.character())
View(Alunos)
setwd("~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts")
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
View(AlunosCorreto)
setwd("~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts")
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[[1:10]])
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[1:10])
View(AlunosC)
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[1:100])
View(AlunosC)
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[1:1000])
pos     <- numeric()
pos[1]  <- 1
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[1:1000])
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[900:1000])
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[800:1000])
DadosAluno <- function(cpf){
Aluno       <- Alunos %>% filter(., CPF == cpf)
vinculos    <- Aluno  %>% select(., CURSO) %>% unique
#'Calcula a Duração dos Vínculos do aluno em cada curso
duracaoV    <- function(curso){
#' Subset dataframe apenas com vinculos do aluno para curso especificado
durDF           <- Aluno  %>% filter(., CURSO %in% curso) %>%
select(., PERIODO_INGRESSO, PERIODO_EVASAO,
COD_INGRESSO, COD_EVASAO, MEDIA_INGRESSO,
NATURALIDADE, SEXO)
#' Determina intervalo entre os diferentes vínculos
durDF$IngCirc   <- durDF$PERIODO_INGRESSO %>%
shifter() %>%
diffPeriodo(., durDF$PERIODO_EVASAO)
#' Se intervalo é > 4 é outro vínculo
#' Se intervalo é negativo achou o último vínculo
pos     <- numeric()
pos[1]  <- 1
if (length(durDF$PERIODO_INGRESSO) == 1) {
pos[1] <- 1
} else {
for (i in length(durDF$IngCirc)) {
if (durDF$IngCirc[[i]] > 4 || durDF$IngCirc[[i]] <= 0){
pos[i] <- i
}
}
}
ingressos <- numeric()
evasões   <- numeric()
coding    <- numeric()
codevad   <- numeric()
mediaI    <- numeric()
#pos <- pos[!is.na(pos)]
for (i in c(1:length(pos))) {
if (i == 1){
ingressos[i] <- durDF$PERIODO_INGRESSO[[i]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[i]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[i]]
} else {
ingressos[i] <- durDF$PERIODO_INGRESSO[[pos[i-1]+1]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[pos[i-1]+1]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[pos[i-1]+1]]
}
}
matrizV <- as.data.frame(cbind(ingressos, evasões, coding, codevad, mediaI))
matrizV$NATURALIDADE <- durDF$NATURALIDADE[[1]]
matrizV$SEXO <- durDF$SEXO[[1]]
matrizV$CURSO <- curso
return(matrizV)
}
AlunosV     <- vinculos$CURSO %>% lapply(., function(x) duracaoV(x)) %>% do.call(rbind,.) %>% as.data.frame()
AlunosV$CPF <- cpf
return(AlunosV)
}
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[800:1000])
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[800:10000])
DadosAluno <- function(cpf){
Aluno       <- Alunos %>% filter(., CPF == cpf)
vinculos    <- Aluno  %>% select(., CURSO) %>% unique
#'Calcula a Duração dos Vínculos do aluno em cada curso
duracaoV    <- function(curso){
#' Subset dataframe apenas com vinculos do aluno para curso especificado
durDF           <- Aluno  %>% filter(., CURSO %in% curso) %>%
select(., PERIODO_INGRESSO, PERIODO_EVASAO,
COD_INGRESSO, COD_EVASAO, MEDIA_INGRESSO,
NATURALIDADE, SEXO)
#' Determina intervalo entre os diferentes vínculos
durDF$IngCirc   <- durDF$PERIODO_INGRESSO %>%
shifter() %>%
diffPeriodo(., durDF$PERIODO_EVASAO)
#' Se intervalo é > 4 é outro vínculo
#' Se intervalo é negativo achou o último vínculo
pos     <- numeric()
pos[1]  <- 1
if (length(durDF$PERIODO_INGRESSO) == 1) {
pos[1] <- 1
} else {
for (i in length(durDF$IngCirc)) {
if (durDF$IngCirc[[i]] > 4 || durDF$IngCirc[[i]] <= 0){
pos[i] <- i
}
}
}
ingressos <- numeric()
evasões   <- numeric()
coding    <- numeric()
codevad   <- numeric()
mediaI    <- numeric()
pos <- pos[!is.na(pos)]
for (i in c(1:length(pos))) {
if (i == 1){
ingressos[i] <- durDF$PERIODO_INGRESSO[[i]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[i]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[i]]
} else {
ingressos[i] <- durDF$PERIODO_INGRESSO[[pos[i-1]+1]]
evasões[i]   <- durDF$PERIODO_EVASAO[[pos[i]]]
coding[i]    <- durDF$COD_INGRESSO[[pos[i-1]+1]]
codevad[i]   <- durDF$COD_EVASAO[[pos[i]]]
mediaI[i]    <- durDF$MEDIA_INGRESSO[[pos[i-1]+1]]
}
}
matrizV <- as.data.frame(cbind(ingressos, evasões, coding, codevad, mediaI))
matrizV$NATURALIDADE <- durDF$NATURALIDADE[[1]]
matrizV$SEXO <- durDF$SEXO[[1]]
matrizV$CURSO <- curso
return(matrizV)
}
AlunosV     <- vinculos$CURSO %>% lapply(., function(x) duracaoV(x)) %>% do.call(rbind,.) %>% as.data.frame()
AlunosV$CPF <- cpf
return(AlunosV)
}
#'Arranja vínculos de lista de alunos
DadosAlunos <- function(df){
getdataAluno <- df %>% lapply(., function(x) DadosAluno(x))
getdataAluno <- do.call(rbind, getdataAluno) %>% as.data.frame()
return(getdataAluno)
}
AlunosC     <- DadosAlunos(AlunosUnicos$CPF[800:10000])
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
View(AlunosCorreto)
AlunosCorreto$duracao <- ifelse(AlunosCorreto$duracao < 0, 0, AlunosCorreto)
write.csv(AlunosCorreto, "../DADOS/Alunos/Alunoscorrigidos.csv")
write.csv(AlunosCorreto, file = "../DADOS/Alunos/Alunoscorrigidos.csv")
write.csv(AlunosCorreto, file = "../DADOS/Alunos/Alunoscorrigidos.csv", row.names = TRUE)
write.csv2(AlunosCorreto, file = "../DADOS/Alunos/Alunoscorrigidos.csv", row.names = TRUE)
View(AlunosCorreto)
View(AlunosCorreto)
AlunosCorreto  <- AlunosC %>% filter(., ingressos >= PERIODO & coding %in% INGRESSO & codevad %in% Evasoes )
AlunosCorreto$status <- ifelse( AlunosCorreto$codevad %in% Ev.academica,
"evasão",
ifelse( AlunosCorreto$codevad %in% Ev.concluintes,
"graduado",
ifelse (AlunosCorreto$codevad %in% Ev.desistencia,
"desistência",
"ativos")))
AlunosCorreto$duracao <- diffPeriodo(AlunosCorreto$evasões, AlunosCorreto$ingressos)
AlunosCorreto$duracao <- ifelse(AlunosCorreto$duracao < 0, 0, AlunosCorreto$duracao)
write.csv(AlunosCorreto, file = "../DADOS/Alunos/Alunoscorrigidos.csv", row.names = TRUE)
View(Dados)
rm(AlunosC, AlunosUnicos, Alunos)
source('~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts/evasao-basedata.R', echo=TRUE)
View(AlunosCorreto)
ggplot(AlunosCorreto, aes(evasoes, status, fill = ingresso)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, status, fill = ingresso)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, status, fill = ingressos)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, status, fill = ingressos)) + geom_bar(stat = "count")
ggplot(AlunosCorreto, aes(evasões, status) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, status)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, status)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, fill = status)) + geom_bar(stat = "identity")
ggplot(AlunosCorreto, aes(evasões, fill = status)) + geom_bar(stat = "count")
ggplot(AlunosCorreto, aes(evasões, fill = status)) + geom_bar(stat = "count", position = "dodge")
ggplot(AlunosCorreto, aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity")
ggplot(AlunosCorreto, aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
ggplot(select(AlunosCorreto, status != "ativos"), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
ggplot(filter(AlunosCorreto, status != "ativos"), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
AlunosCorreto$ingressos %<>% as.factor()
AlunosCorreto$evasões %<>% as.factor()
ggplot(filter(AlunosCorreto, status != "ativos"), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 0), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
suppressMessages(library("ggplot2"))
suppressMessages(library("ggthemes"))
suppressMessages(library("dplyr"))
suppressMessages(library("plyr"))
suppressMessages(library("magrittr"))
suppressMessages(library("gtools"))
#####################################
# Gráficos preliminares
#Lendo Dados
AlunosCorreto <- read.csv("../DADOS/Alunos/Alunoscorrigidos.csv")
setwd("~/Dropbox/Workspace/IndicadoresEvasao/Evasao/Rscripts")
AlunosCorreto$ingressos %<>% as.factor()
AlunosCorreto$evasões %<>% as.factor()
ggplot(filter(AlunosCorreto, status != "ativos"), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de cotistas") +
labs(x = "", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(angle = 75))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=2,byrow=TRUE)) +
scale_fill_brewer(palette = "Paired")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(angle = 75))+
theme(axis.text.y = element_text(size = 6))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Paired")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(angle = 75))+
theme(axis.text.y = element_text(size = 6))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(angle = 75))+
theme(axis.text.y = element_text(size = 8))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "Período Evasão", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(angle = 75))+
theme(axis.text.y = element_text(size = 8))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "Período Evasão", y = "Alunos") +
theme_economist_white() +
theme(axis.text.y = element_text(size = 8))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "Período Evasão", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(size = 8))+
theme(axis.text.y = element_text(size = 8))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
coorteEvasores <- ggplot(filter(AlunosCorreto, status != "ativos" & duracao > 1), aes(evasões, fill = status)) + geom_bar(stat = "count", position = "identity") +
facet_grid(ingressos~.)+
ggtitle("Composição da população de Evasores - Coortes de Ingresso") +
labs(x = "Período Evasão", y = "Alunos") +
theme_economist_white() +
theme(axis.text.x = element_text(size = 8))+
theme(axis.text.y = element_text(size = 8))+
theme(legend.position = "bottom") +
theme(legend.text = element_text(size = 6))+
guides(fill=guide_legend(nrow=1,byrow=TRUE)) +
scale_fill_brewer(palette = "Set2")
